---
title: "CO₂ Emissions Insights"
author: "Cassandra Pantuso"
date: "2004-12-09"
format: 
    html:
        echo: false
        warning: false
---


```{python}
import pandas as pd
import numpy as np
import plotly.express as px
from itables import show
import country_converter as coco
```


```{python}
# Load the data
emissions = pd.read_csv("data/co2_cons.csv")
```



```{python}
for col in ["2021", "2022"]:
    has_k = emissions[col].str.contains("k")
    values = emissions[col].str.replace("k", "")
    emissions[col] = np.where(has_k, values.astype(float) * 1000, values.astype(float))
```


```{python}
# Subset the data to include `country`, `2000`, and `2022` columns only.
table_df = emissions[["country", "2000", "2022"]]

# Calculate absolute change as the difference between 2022 and 2000
table_df["Absolute Change"] = table_df["2022"] - table_df["2000"]

# Calculate relative change as the absolute change divided by the 2000 emissions, then multiplied by 100
table_df["Relative Change"] =  table_df["Absolute Change"] / table_df["2000"] * 100

# Round to 0 decimal places, and add a % sign to the relative change
table_df["Relative Change"] = table_df["Relative Change"].round(0).astype(str) + "%"
```


```{python}
# Melt the dataset. Your id_vars should be "country", your var_name should be "year" and your value_name should be "emissions".
emissions_long = emissions.melt(
    id_vars="country", var_name="year", value_name="emissions"
)

# Convert year to numeric using pd.to_numeric
emissions_long["year"] = pd.to_numeric(emissions_long["year"])

# Convert emissions to numeric using pd.to_numeric. Here, we also convert dashes to the minus sign
emissions_long["emissions"] = pd.to_numeric(
    emissions_long["emissions"].astype(str).str.replace("−", "-")
)

# Query for years between 1990 and 2022 (that is 1990, 1991, ..., 2021, 2022)
emissions_long = emissions_long.query("year >= 1990 & year <= 2022")

# Query for 5 countries (adjust these to any countries you like)
emissions_long_subset = emissions_long.query(
    "country in ['India', 'China', 'USA', 'Indonesia', 'Pakistan']"
)


# Create line chart. Year should be on the x-axis, emissions on the y-axis, and color should be by country.
fig_chart = px.line(
    emissions_long_subset,
    x="year",
    y="emissions",
    color="country",
    title="CO2 Emissions (1990-2022)",
)

```



```{python}
# Convert country names to ISO3 codes
emissions_long["country_code"] = coco.convert(
    emissions_long["country"], to="ISO3"
)

fig_map = px.choropleth(
    emissions_long,
    locations="country_code",
    color="emissions",
    hover_name="country",
    animation_frame="year",
    title="Global CO2 Emissions (1990-2022)",
)

```



Below is a brief summary of global CO₂ emissions by country from 1990-2022. The report contains an interactive table demonstrating relative and absolute change in emissions between 2020 and 2022, a chart that shows total CO₂ emissions from the top 5 most populous countries, and an animated choropleth map that displays the global change in emissions over time.



::: {.panel-tabset}

## Table

```{python}
show(table_df)
```

## Chart

```{python}
fig_chart.show()
```

## Map

```{python}
fig_map.show()
```

:::

This report was created using data from Gapminder. The Gapminder dataset is a publicly available dataset that provides global development indicators. Gapminder is an independent educational non-proﬁt that seeks to combat global misconceptions using a fact-based worldview grounded in macrotrends and reliable statistics. More information can be found [here]("https://www.gapminder.org/").
